(()=>{"use strict";const e="SessionKey",n=async()=>new Promise(((n,o)=>{chrome.storage.local.get([e],(function(e){void 0===e.SessionKey?n(null):n(e.SessionKey)}))}));var o=chrome.runtime.connectNative("com.allianz.usercertificateautoenrollment");o.onDisconnect.addListener((function(){console.log(chrome.runtime.lastError),console.log("disconnected from native app."),o=null}));var t=-1;const s=[{Id:1,Description:"Command to get local certificates"},{Id:2,Description:"Send this with the PFX file to update certificates"},{Id:3,Description:"Send this with a ThumbprintID to make a certificate as auth certificate"},{Id:4,Description:"Get current domain user"},{Id:5,Description:"Get session logs"}];async function a(e,o){t=e;var s={CommandId:e,CommandValue:o,SessionKey:await n()};return console.log("3. Sending message to native app: "+JSON.stringify(s)),new Promise(((e,n)=>{chrome.runtime.sendNativeMessage("com.allianz.usercertificateautoenrollment",s,(async function(n){console.log("4. Response triggerd...");var o=await async function(e){switch(console.log("5. Recieved message from native app: "+JSON.stringify(e)),console.log("6. Command before "+t),t){case 1:case 2:case 3:break;case 4:await async function(e){await(async e=>new Promise(((n,o)=>{var t={};t.LoggedInUser=e,chrome.storage.local.set(t,(function(){console.log("7. Saving logged in user "+t.LoggedInUser),n(!0)}))})))(e.data)}(e);break;case 5:await async function(e){console.log(e)}(e)}return t=-1,!0}(n);e(o)}))}))}const i=document.getElementById("btnAuthorize"),c=document.getElementById("btnSyncCertificates"),r=document.getElementById("btnGetLogs");i.addEventListener("click",(async function(){console.log("1.Getting user from OS"),await(async()=>{var e=s[3];console.log("2. Sending command "+e.Id),await a(e.Id),console.log("8. "+t)})(),console.log("9. User retrieved..., authorizing"),(async()=>{var e=await(async()=>new Promise(((e,n)=>{chrome.storage.local.get(["LoggedInUser"],(function(n){void 0===n.LoggedInUser?e(null):e(n.LoggedInUser)}))})))();console.log("9. Domain"+e),(async e=>{new Promise(((n,o)=>{var t={};t.SessionKey=e,chrome.storage.local.set(t,(function(){console.log("Saving session key "+t.SessionKey),n(!0)}))}))})(function(e){for(var n="",o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",t=o.length,s=0;s<10;s++)n+=o.charAt(Math.floor(Math.random()*t));return n}());var o=await n();console.log("11. Session key "+o)})(),console.log("User authorized")})),c.addEventListener("click",(function(){(async()=>{var e=s[0];console.log("Sending commnad "+e.Id),await a(e.Id)})()})),r.addEventListener("click",(function(){(async()=>{var e=s[4];await a(e.Id)})()})),(async()=>{(async e=>{new Promise(((e,n)=>{chrome.storage.local.remove(["SessionKey"],(function(n){console.log(n),e(!0)}))}))})()})()})();