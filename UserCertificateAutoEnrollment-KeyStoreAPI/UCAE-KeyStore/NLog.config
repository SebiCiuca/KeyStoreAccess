<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="true"
	  throwConfigExceptions="true"
      internalLogLevel="Debug" internalLogFile="c:\temp\nlog-internal.log">

	<!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
	<variable name="myvar" value="myvalue"/>
	<extensions>
		<add assembly="Sentry.NLog" />
	</extensions>
	<!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
	<targets>

		<!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

		<!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
		<target xsi:type="File" name="UCAELogFile"  
				fileName="C:\temp\logs\${shortdate}.log" 				
				keepFileOpen="true"
				concurrentWrites="true"
				layout="${longdate} ${uppercase:${level}} ${gdc:item=SessionKey} ${message}"/>	
		<target xsi:type="File" name="UCAELogSessionFile"  
				fileName="C:\temp\logs\LOG_${gdc:item=SessionKey}_${shortdate}.log" 				
				keepFileOpen="true"
				concurrentWrites="true"
				layout="${longdate} ${uppercase:${level}} ${gdc:item=SessionKey} ${message}"/>
		<target xsi:type="EventLog"
				name="UCAEEventLog"
				eventId="${event-properties:EventId:whenEmpty=0}"
				layout="${longdate}|${level:uppercase=true}|${logger}|${gdc:item=SessionKey}|${message:withexception=true}"
				source="UCAEKeyStoreApi"
				log="Application"/>
		<target xsi:type="Memory"
				name="UCAEMemoryLog"
				layout="${longdate}|${level:uppercase=true}|${logger}|${gdc:item=SessionKey}|${message:withexception=true}"/>
		<!--<target xsi:type="Sentry" 
		   name="UCAESentry"
		   dsn="https://1dbc3eb561854286a6932798932315c3@o4503936065732608.ingest.sentry.io/4503936067829760"
		   layout="${message}"
		   environment="Development"
		   breadcrumbLayout="${message}"
		   minimumBreadcrumbLevel="Debug"
		   minimumEventLevel="Error">

			--><!-- Advanced options can be configured here--><!--
			<options
				sendDefaultPii="true"
				attachStacktrace="false"
				shutdownTimeoutSeconds="5"
				debug="false"
        >
				--><!--Advanced options can be specified as attributes or elements--><!--
				<includeEventDataOnBreadcrumbs>true</includeEventDataOnBreadcrumbs>
			</options>

			--><!--Optionally add any desired additional Tags that will be sent with every message --><!--
			<tag name="exception" layout="${exception:format=shorttype}" includeEmptyValue="false" />

			--><!--Optionally add any desired additional Data that will be sent with every message --><!--
			<contextproperty name="threadid" layout="${threadid}" includeEmptyValue="true" />
		</target>-->

		<target xsi:type="Sentry" name="UCAESentry"
				dsn=" https://1dbc3eb561854286a6932798932315c3@o4503936065732608.ingest.sentry.io/4503936067829760"
				environment="Development"
				includeEventProperties="True"
				layout="${message}"
				breadcrumbLayout="${message}"
				minimumBreadcrumbLevel="Debug"
				ignoreEventsWithNoException="False"
				includeEventDataOnBreadcrumbs="False"
				includeEventPropertiesAsTags="True"
				minimumEventLevel="Trace">

			<!-- Advanced options can be configured here-->
			<options
				attachStacktrace="true"
				sendDefaultPii="true"
				shutdownTimeoutSeconds="5"
        />

			<!--Optionally add any desired additional Tags that will be sent with every message -->
			<tag name="exception" layout="${exception:format=shorttype}" includeEmptyValue="false" />

			<!--Optionally add any desired additional Data that will be sent with every message -->
			<contextproperty name="threadid" layout="${threadid}" includeEmptyValue="true" />

			<!-- Optionally specify user properties via NLog (here using MappedDiagnosticsLogicalContext as an example) -->
			<user id="${mdlc:item=id}"
				  username="${mdlc:item=username}"
				  email="${mdlc:item=email}"
				  ipAddress="${mdlc:item=ipAddress}">
				<!-- You can also apply additional user properties here-->
				<other name="mood" layout="joyous"/>
			</user>
		</target>
	</targets>

	<rules>
		<!-- add your logging rules here -->
		<logger name="System.*" finalMinLevel="Warn" />
		<logger name="Microsoft.*" finalMinLevel="Warn" />
		<logger name="Microsoft.Hosting.Lifetime*" finalMinLevel="Info" />
		<logger name="*" minlevel="Trace" writeTo="UCAELogFile" />
		<logger name="*" minlevel="Debug" writeTo="UCAEEventLog" />
		<logger name="*" minlevel="Trace" writeTo="UCAEMemoryLog" />
		<logger name="*" minlevel="Trace" writeTo="UCAELogSessionFile" />
		<logger name="*" minlevel="Trace" writeTo="UCAESentry" />
		<!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    
    -->
	</rules>
</nlog>

<!--
<targets>

</targets>

<rules>
	<logger name="*" minlevel="Info" writeTo="logconsole" />
	<logger name="*" minlevel="Debug" writeTo="logfile" />
</rules>-->